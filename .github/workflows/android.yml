name: build android

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: android 21
            android: 21
          - os: ubuntu-latest
            name: android 26
            android: 26

    runs-on: ${{ matrix.os }}

    name: build (${{ matrix.name }})

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: uncompress docker image
        run: |
          xz -d ./ubuntu.tar.xz

      - name: load docker image
        run: |
          sudo docker image load -i ./ubuntu.tar

      - name: create docker container
        run: |
          sudo docker container create --user ubuntu --workdir /home/ubuntu --init --tty --tmpfs /tmp --ulimit nofile=262144:262144 --name git_local_ubuntu git_local_ubuntu:23.10

      - name: start docker container
        run: |
          sudo docker container start git_local_ubuntu
      
      - name: allow ubuntu user to sudo
        run: |
          sudo docker container exec --user root git_local_ubuntu bash -c "echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ubuntu"

      - name: install perl readline
        run: |
          sudo docker container exec git_local_ubuntu bash -c "sudo apt install -y libterm-readline-gnu-perl"

      - name: generate program
        run: |
          sudo docker container exec git_local_ubuntu bash -c "printf \"#include <stdio.h>\nint main() { printf(\\\"hello\\\\\n\\\"); return 0; }\n\" > program.c"

      - name: cat program
        run: |
          sudo docker container exec git_local_ubuntu bash -c "cat program.c"

      - name: install NDK 25c
        run: |
          sudo docker container exec git_local_ubuntu bash -c "sudo apt install -y google-android-ndk-r25c-installer"

      - name: Setup ssh session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 50
      
      - name: compile program
        run: |
          sudo docker container exec git_local_ubuntu bash -c "clang program.c -O3 -g0 -o program"

      - name: execute program
        run: |
          sudo docker container exec git_local_ubuntu bash -c "./program"
